// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0--rc2
// source: muses.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// =================================================请求Req===============================================================
type MessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str string `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
}

func (x *MessRequest) Reset() {
	*x = MessRequest{}
	mi := &file_muses_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessRequest) ProtoMessage() {}

func (x *MessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_muses_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessRequest.ProtoReflect.Descriptor instead.
func (*MessRequest) Descriptor() ([]byte, []int) {
	return file_muses_proto_rawDescGZIP(), []int{0}
}

func (x *MessRequest) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

type MessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 状态
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// 消息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 数据
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MessResponse) Reset() {
	*x = MessResponse{}
	mi := &file_muses_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessResponse) ProtoMessage() {}

func (x *MessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_muses_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessResponse.ProtoReflect.Descriptor instead.
func (*MessResponse) Descriptor() ([]byte, []int) {
	return file_muses_proto_rawDescGZIP(), []int{1}
}

func (x *MessResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MessResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MessResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age    int64   `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Length float64 `protobuf:"fixed64,3,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	mi := &file_muses_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_muses_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_muses_proto_rawDescGZIP(), []int{2}
}

func (x *Person) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Person) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Person) GetLength() float64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type QueryFileInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryFileInfoList []*QueryFileInfo `protobuf:"bytes,1,rep,name=query_file_info_list,json=queryFileInfoList,proto3" json:"query_file_info_list,omitempty"`
}

func (x *QueryFileInfoReq) Reset() {
	*x = QueryFileInfoReq{}
	mi := &file_muses_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFileInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFileInfoReq) ProtoMessage() {}

func (x *QueryFileInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_muses_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFileInfoReq.ProtoReflect.Descriptor instead.
func (*QueryFileInfoReq) Descriptor() ([]byte, []int) {
	return file_muses_proto_rawDescGZIP(), []int{3}
}

func (x *QueryFileInfoReq) GetQueryFileInfoList() []*QueryFileInfo {
	if x != nil {
		return x.QueryFileInfoList
	}
	return nil
}

type QueryFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PreviewExpireSeconds int32  `protobuf:"varint,2,opt,name=preview_expire_seconds,json=previewExpireSeconds,proto3" json:"preview_expire_seconds,omitempty"`
}

func (x *QueryFileInfo) Reset() {
	*x = QueryFileInfo{}
	mi := &file_muses_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFileInfo) ProtoMessage() {}

func (x *QueryFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_muses_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFileInfo.ProtoReflect.Descriptor instead.
func (*QueryFileInfo) Descriptor() ([]byte, []int) {
	return file_muses_proto_rawDescGZIP(), []int{4}
}

func (x *QueryFileInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueryFileInfo) GetPreviewExpireSeconds() int32 {
	if x != nil {
		return x.PreviewExpireSeconds
	}
	return 0
}

// =================================================请求Req===============================================================
// =================================================请求Rsp===============================================================
type QueryFileInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileStoreInfoList []*FileStoreInfo `protobuf:"bytes,1,rep,name=file_store_info_list,json=fileStoreInfoList,proto3" json:"file_store_info_list,omitempty"`
}

func (x *QueryFileInfoRsp) Reset() {
	*x = QueryFileInfoRsp{}
	mi := &file_muses_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFileInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFileInfoRsp) ProtoMessage() {}

func (x *QueryFileInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_muses_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFileInfoRsp.ProtoReflect.Descriptor instead.
func (*QueryFileInfoRsp) Descriptor() ([]byte, []int) {
	return file_muses_proto_rawDescGZIP(), []int{5}
}

func (x *QueryFileInfoRsp) GetFileStoreInfoList() []*FileStoreInfo {
	if x != nil {
		return x.FileStoreInfoList
	}
	return nil
}

type FileStoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *FileStoreInfo) Reset() {
	*x = FileStoreInfo{}
	mi := &file_muses_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileStoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStoreInfo) ProtoMessage() {}

func (x *FileStoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_muses_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStoreInfo.ProtoReflect.Descriptor instead.
func (*FileStoreInfo) Descriptor() ([]byte, []int) {
	return file_muses_proto_rawDescGZIP(), []int{6}
}

func (x *FileStoreInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileStoreInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_muses_proto protoreflect.FileDescriptor

var file_muses_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x75, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0x1f, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x74, 0x72, 0x22, 0x4c, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x46, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x56, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x14,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x55, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x14, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x14, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x31, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x32, 0x2d, 0x0a, 0x07, 0x4d, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x22, 0x0a,
	0x08, 0x73, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x32, 0x4f, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x72, 0x79, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x73, 0x70, 0x42, 0x2e, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x75, 0x73, 0x65, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x01, 0x5a, 0x12,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_muses_proto_rawDescOnce sync.Once
	file_muses_proto_rawDescData = file_muses_proto_rawDesc
)

func file_muses_proto_rawDescGZIP() []byte {
	file_muses_proto_rawDescOnce.Do(func() {
		file_muses_proto_rawDescData = protoimpl.X.CompressGZIP(file_muses_proto_rawDescData)
	})
	return file_muses_proto_rawDescData
}

var file_muses_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_muses_proto_goTypes = []any{
	(*MessRequest)(nil),      // 0: pb.MessRequest
	(*MessResponse)(nil),     // 1: pb.MessResponse
	(*Person)(nil),           // 2: pb.Person
	(*QueryFileInfoReq)(nil), // 3: pb.QueryFileInfoReq
	(*QueryFileInfo)(nil),    // 4: pb.QueryFileInfo
	(*QueryFileInfoRsp)(nil), // 5: pb.QueryFileInfoRsp
	(*FileStoreInfo)(nil),    // 6: pb.FileStoreInfo
}
var file_muses_proto_depIdxs = []int32{
	4, // 0: pb.QueryFileInfoReq.query_file_info_list:type_name -> pb.QueryFileInfo
	6, // 1: pb.QueryFileInfoRsp.file_store_info_list:type_name -> pb.FileStoreInfo
	2, // 2: pb.MyHello.sayHello:input_type -> pb.Person
	3, // 3: pb.FileStoreService.queryVisitUrl:input_type -> pb.QueryFileInfoReq
	2, // 4: pb.MyHello.sayHello:output_type -> pb.Person
	5, // 5: pb.FileStoreService.queryVisitUrl:output_type -> pb.QueryFileInfoRsp
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_muses_proto_init() }
func file_muses_proto_init() {
	if File_muses_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_muses_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_muses_proto_goTypes,
		DependencyIndexes: file_muses_proto_depIdxs,
		MessageInfos:      file_muses_proto_msgTypes,
	}.Build()
	File_muses_proto = out.File
	file_muses_proto_rawDesc = nil
	file_muses_proto_goTypes = nil
	file_muses_proto_depIdxs = nil
}
